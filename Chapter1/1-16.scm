(define (fast-expt b n) 
  (expt-iter b n 1)
)
(define (expt-iter b n ans)
  (cond ((= n 0) ans)
        ((even? n) (expt-iter (square b) (/ n 2) ans))
        (else (expt-iter b (- n 1) (* b ans)))
  )
)
(define (even? n) (= (remainder n 2) 0))
(define (square n) (* n n))
