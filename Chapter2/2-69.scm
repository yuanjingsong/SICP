(load "huffman.scm")
(define (generate-huffman-tree pairs)
  (successive-merge (make-leaf-set pairs))
  )
(define (successive-merge pairs)
  (cond ((= (length pairs) 0) '())
        ((= (length pairs) 1)  (car pairs))
        (else 
          (let ((new-sub-tree (make-code-tree (car pairs) (cadr pairs)))
                (remained-set (cddr pairs))
                )
            (successive-merge (adjoin-set new-sub-tree remained-set))
          )
    )
  )
  )
