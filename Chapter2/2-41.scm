(load "util.scm")
(load "2-40.scm")
(define (unique-triples n)
  (flatmap (lambda (i) (map (lambda (j) (cons i j)) (unique-pair (- i 1))))  
           (enumerate-interval 1 n))
  )
(define (trple-sum-equal? sum triple)
  (= sum (+ (car triple)
            (cadr triple)
            (caddr triple)
           ))
  )
(define (func n sum)
    (filter (lambda (i) (trple-sum-equal? sum i)) (unique-triples n))
  )
