(define (sum term a next b)
  (if (> a b) 0 
    (+ (term a) (sum term (next a) next b))
  )
  )
(define (even? k) (= (remainder k 2) 0))
(define (simpson f a b n )
  (define h (/ (- b a) n))
  (define (func k)
    ( f (+ a (* k h)))
    )
  (define (factor k)
    (cond ( (or (= k 0) (= k n)) 1)
        ((even? k) 2)
        (else 4)
      )
    )
  (define  (term k )
    (* (factor k) (func k))
    )
  (define (next k) (+ k 1))
  (* (/ h 3) (sum term 0 next n))
  )
